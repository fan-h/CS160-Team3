#!/usr/bin/python


# getoints :
# 
# This takes one argument, the video id number.
# It takes each saved frame image of the video
# and obtains 68 face-points from each, saving
# everything into a separate file for each frame.
# This script should be in Apache cgi-bin.
# 
# Videos are expected to be in /cs160/videos/<#>.mp4
# 
# Frames (grayscale) are expected to be in:
# /cs160/frames/<videoid>/gray/<videoid>.<frame#>.png
# 
# List of points are saved to:
# /cs160/frames/<videoid>/points/<videoid>.<frame#>.points
# 

import sys
import subprocess
import os
import os.path
import string

myname = sys.argv[0]

if ((len(sys.argv) < 2 or  (len(sys.argv) > 2))):
    print "syntax: " + myname + " <video-id#>"
    sys.exit(1)

vidid = sys.argv[1]
videopath = "/cs160/videos/"
videofile = videopath + vidid + ".mp4"
imgdir = "/cs160/frames/" + vidid + "/gray/"

pointsdir = "/cs160/frames/" + vidid + "/points/"

if not os.path.isfile(videofile):
    print "error: video file " + videofile + " not found."
    sys.exit(1)

if not os.path.isdir(pointsdir):
    os.mkdir(pointsdir)

getcmd = "ffprobe -v 0 -select_streams v:0 -show_entries stream=nb_frames " \
         + videofile + "|grep -v STREAM|cut -f 2 -d="
nb_frames = subprocess.check_output(getcmd, shell=True)

fn = nb_frames.strip()
print "please wait...this may take over " + fn + " minutes..."

for i in xrange(1, int(nb_frames) + 1):
    frameid = '{:d}'.format(i)
    imgfile = vidid + "." + frameid + ".png"
    if not os.path.isfile(imgdir + imgfile):
        print "err: frame file " + imgdir + imgfile + " not found."
        sys.exit(2)

    tfile = "/tmp/list_det_0.txt"

    # print "processing " + imgfile
    # print "imgid = " + frameid
    
    getpointscmd = "FaceLandmarkImg -f " + imgfile + " -inroot " + imgdir + " -of list.txt -outroot /tmp"
    a = subprocess.check_output(getpointscmd, shell=True)
    
    catcmd = "cat " + tfile + "|grep -A 68 npoints" \
                + "|grep -v npoints|grep -v {|grep -v }"
    rawpoints = subprocess.check_output(catcmd, shell=True)

    # save points to file
    pointsfile = pointsdir + vidid + "." + frameid + ".points"
    filep = open(pointsfile, "w")

    for pline in rawpoints.splitlines():
        x, y = pline.split()
        outline = "%d %d\n" % (int(float(x)), int(float(y)))
        filep.write(outline)

    filep.close()

    print "done frame " + frameid


